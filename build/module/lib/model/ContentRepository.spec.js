import test from 'ava';
import { MockDynamicContent } from '../DynamicContent.mocks';
import { ContentItem } from './ContentItem';
import { Folder } from './Folder';
test('get content repository by id', async (t) => {
    const client = new MockDynamicContent();
    const result = await client.contentRepositories.get('5b32377b4cedfd01c4503691');
    t.is(result.name, 'inspiration');
});
test('create content item', async (t) => {
    const client = new MockDynamicContent();
    const contentRepository = await client.contentRepositories.get('5b32377b4cedfd01c4503691');
    const newContentItem = new ContentItem();
    newContentItem.label = 'Banner Ad Homepage';
    const createdContentItem = await contentRepository.related.contentItems.create(newContentItem);
    t.is(createdContentItem.label, 'Banner Ad Homepage');
});
test('list content items', async (t) => {
    const client = new MockDynamicContent();
    const contentRepository = await client.contentRepositories.get('5b32377b4cedfd01c4503691');
    const result = await contentRepository.related.contentItems.list();
    t.is(result.getItems()[0].label, 'Banner Ad Homepage');
});
test('list repository top-level folders', async (t) => {
    const client = new MockDynamicContent();
    const contentRepository = await client.contentRepositories.get('5b32377b4cedfd01c4503691');
    const folders = await contentRepository.related.folders.list();
    t.is(folders.getItems()[0].name, 'A folder to end all folders');
});
test('create top-level folder in content repository', async (t) => {
    const client = new MockDynamicContent();
    const contentRepository = await client.contentRepositories.get('5b32377b4cedfd01c4503691');
    const newFolder = await contentRepository.related.folders.create(new Folder({
        name: 'Another Folder'
    }));
    t.is(newFolder.name, 'Another Folder');
});
test('toJSON should copy resource attributes', async (t) => {
    const client = new MockDynamicContent();
    const contentRepository = await client.contentRepositories.get('5b32377b4cedfd01c4503691');
    t.deepEqual(contentRepository.toJSON(), {
        contentTypes: [],
        features: [],
        id: '5b32377b4cedfd01c4503691',
        itemLocales: ['en', 'fr'],
        label: 'Inspiration',
        name: 'inspiration',
        status: 'ACTIVE',
        type: 'CONTENT'
    });
});
test('assign content type', async (t) => {
    const client = new MockDynamicContent();
    const contentRepository = await client.contentRepositories.get('5b32377b4cedfd01c4503691');
    const result = await contentRepository.related.contentTypes.assign('5be1d5134cedfd01c030c460');
    t.is(result.id, '5b32377b4cedfd01c4503691');
});
test('unassign content type', async (t) => {
    const client = new MockDynamicContent();
    const contentRepository = await client.contentRepositories.get('5b32377b4cedfd01c4503691');
    const result = await contentRepository.related.contentTypes.unassign('5be1d5134cedfd01c030c460');
    t.pass();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudFJlcG9zaXRvcnkuc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvbW9kZWwvQ29udGVudFJlcG9zaXRvcnkuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLElBQUksTUFBTSxLQUFLLENBQUM7QUFDdkIsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDN0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1QyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRWxDLElBQUksQ0FBQyw4QkFBOEIsRUFBRSxLQUFLLEVBQUMsQ0FBQyxFQUFDLEVBQUU7SUFDN0MsTUFBTSxNQUFNLEdBQUcsSUFBSSxrQkFBa0IsRUFBRSxDQUFDO0lBRXhDLE1BQU0sTUFBTSxHQUFHLE1BQU0sTUFBTSxDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FDakQsMEJBQTBCLENBQzNCLENBQUM7SUFDRixDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsYUFBYSxDQUFDLENBQUM7QUFDbkMsQ0FBQyxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMscUJBQXFCLEVBQUUsS0FBSyxFQUFDLENBQUMsRUFBQyxFQUFFO0lBQ3BDLE1BQU0sTUFBTSxHQUFHLElBQUksa0JBQWtCLEVBQUUsQ0FBQztJQUV4QyxNQUFNLGlCQUFpQixHQUFHLE1BQU0sTUFBTSxDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FDNUQsMEJBQTBCLENBQzNCLENBQUM7SUFDRixNQUFNLGNBQWMsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO0lBQ3pDLGNBQWMsQ0FBQyxLQUFLLEdBQUcsb0JBQW9CLENBQUM7SUFDNUMsTUFBTSxrQkFBa0IsR0FBRyxNQUFNLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUM1RSxjQUFjLENBQ2YsQ0FB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